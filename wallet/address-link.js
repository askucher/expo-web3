// Generated by LiveScript 1.6.0
(function(){
  var getAddressLabel, getAddress, getAddressLink, getAddressTitle, out$ = typeof exports != 'undefined' && exports || this, toString$ = {}.toString;
  getAddressLabel = function(wallet){
    var ref$;
    switch (false) {
    case (ref$ = wallet.coin.token) !== 'xem' && ref$ !== 'eos':
      return 'account';
    default:
      return 'address';
    }
  };
  getAddress = function(wallet, addressSuffix){
    addressSuffix == null && (addressSuffix = "");
    return wallet["address" + addressSuffix];
  };
  out$.getAddressLink = getAddressLink = function(wallet, addressSuffix){
    var address, network, ref$, ref1$, res;
    address = getAddress(wallet, addressSuffix);
    network = ((ref$ = global.store) != null ? (ref1$ = ref$.current) != null ? ref1$.network : void 8 : void 8) || 'mainnet';
    res = (function(){
      switch (false) {
      case wallet.network != null:
        return 'about:blank';
      case wallet.coin.token !== 'btc':
        return "https://bitpay.com/insight/#/BTC/" + network + "/address/" + address;
      case toString$.call(address).slice(8, -1) !== 'String':
        return wallet.network.api.url + "/" + getAddressLabel(wallet) + "/" + address;
      case !(toString$.call(address).slice(8, -1) === 'Null' && wallet.publicKey != null):
        return wallet.network.registerAccountLink.replace(':public-key', wallet.publicKey);
      default:
        return "#";
      }
    }());
    return res;
  };
  out$.getAddressTitle = getAddressTitle = function(wallet, addressSuffix){
    var address, res;
    address = getAddress(wallet, addressSuffix);
    res = (function(){
      switch (false) {
      case toString$.call(address).slice(8, -1) !== 'String':
        return address;
      case toString$.call(address).slice(8, -1) !== 'Null':
        return "...";
      default:
        return "n/a";
      }
    }());
    return res;
  };
}).call(this);
