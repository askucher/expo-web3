// Generated by LiveScript 1.6.0
(function(){
  var ref$, sortBy, reverse, filter, filterTxs;
  ref$ = require('prelude-ls'), sortBy = ref$.sortBy, reverse = ref$.reverse, filter = ref$.filter;
  filterTxs = curry$(function(store, tx){
    var filt, type, token;
    filt = store.current.filter;
    type = tx.type, token = tx.token;
    return in$(type, filt) && in$(token, filt);
  });
  module.exports = function(store){
    if (store.transactions.all.length === 0) {
      return store.transactions.applied.length = 0;
    }
    return store.transactions.applied = reverse(
    sortBy(function(it){
      return it.time;
    })(
    filter(filterTxs(store))(
    store.transactions.all)));
  };
  function in$(x, xs){
    var i = -1, l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
